# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [ 1.00, 1.00, 1024 ]

backbone:
  # [from, repeats, module, args]
  - [ -1, 1, EfficientViT_M0, [ ] ]  # 4

head:
  - [ -1, 1, Conv, [ 256, 1, 1, None, 1, 1, False ] ]  # 5 input_proj.2
  - [ -1, 1, TransformerEncoderLayer_EfficientAdditiveAttnetion, [ 1024, 8 ] ] # 6
  - [ -1, 1, PSConv, [ 256, 1, 1 ] ]  # 7, Y5, lateral_convs.0

  - [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ] # 8
  - [ 3, 1, Conv, [ 256, 1, 1, None, 1, 1, False ] ]  # 9 input_proj.1
  - [ [ -2, -1 ], 1, Concat, [ 1 ] ] # 10
  - [ -1, 3, RepC3, [ 256, 0.5 ] ]  # 11, fpn_blocks.0
  - [ -1, 1, Conv, [ 256, 1, 1 ] ]   # 12, Y4, lateral_convs.1

  - [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ] # 13
  - [ 2, 1, Conv, [ 256, 1, 1, None, 1, 1, False ] ]  # 14 input_proj.0
  - [ [ -2, -1 ], 1, Concat, [ 1 ] ]  # 15 cat backbone P4
  - [ -1, 3, RepC3, [ 256, 0.5 ] ]    # X3 (16), fpn_blocks.1

  - [ -1, 1, WTConv2d, [ 256, 5, 2 ] ]   # 23, downsample_convs.1
  - [ [ -1, 12 ], 1, Concat, [ 1 ] ]  # 18 cat Y4
  - [ -1, 3, RepC3, [ 256, 0.5 ] ]    # F4 (19), pan_blocks.0

  - [ -1, 1, WTConv2d, [ 256, 5, 2 ] ]   # 23, downsample_convs.1
  - [ [ -1, 7 ], 1, Concat, [ 1 ] ]  # 21 cat Y5
  - [ -1, 3, RepC3, [ 256, 0.5 ] ]    # F5 (22), pan_blocks.1

  - [ 2, 1, Conv, [ 256, 1 ] ] # 23-P3/8
  - [ 3, 1, Conv, [ 256, 1 ] ] # 24-P4/16
  - [ 4, 1, Conv, [ 256, 1 ] ] # 25-P5/32

  - [ [ 23, 16 ], 1, CAFMFusion, [ 2 ] ] # 26 (P3/8-small)
  - [ [ 24, 19 ], 1, CAFMFusion, [ 4 ] ] # 27 (P4/16-medium)
  - [ [ 25, 22 ], 1, CAFMFusion, [ 8 ] ] # 28 (P5/32-large)

  - [ [ 26, 27, 28 ], 1, RTDETRDecoder, [ nc, 256, 300, 4, 8, 3 ] ]  # Detect(P3, P4, P5)
